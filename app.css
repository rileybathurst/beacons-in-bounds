:root {
  --primary: #FF851B;
  --base-measure: 40rem;
}


/* https://type-scale.com/ */
body {
  line-height: 1.65;
}

p {
  margin-bottom: 1.15rem;
  color: darkslategray;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 2.75rem 0 1.05rem;
  line-height: 1.15;
  font-family: stenciletta, sans-serif;
}

h1 {
  margin-top: 0;
  font-size: 3.052rem;
}

h2 {
  font-size: 2.441rem;
}

h3 {
  font-size: 1.953rem;
}

h4 {
  font-size: 1.563rem;
}

h5 {
  font-size: 1.25rem;
}

h5 {
  font-size: 1rem;
}

small,
.text_small {
  font-size: 0.8rem;
}

body {
  width: 100%;
  margin: 0;
  font-size: 16px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-weight: 400;
  font-style: normal;
}

a {
  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}

/*------------------------------------*/
/* #HEADER */
/*------------------------------------*/

header {
  display: grid;
  max-height: 35rem;
  /* max-height: 85rem; */
  overflow-y: hidden;
  grid-template-rows: 10rem 9rem;
  /* guess and check */
}

@media (min-width: 40rem) {
  header {
    grid-template-rows: 12rem 15rem;
  }
}

@media (min-width: 60rem) {
  header {
    grid-template-rows: 15rem 20rem;
  }
}

header #primary-blob {
  width: 100%;
  grid-row: 2;
  grid-column: 1;
  mix-blend-mode: multiply;
  z-index: 5;
  height: 5rem;
}

@media (min-width: 40rem) {
  header {
    height: 10rem;
  }
}


header #base-blob {
  grid-row: 2;
  grid-column: 1;
  height: 10rem;
  width: 100%;
  align-self: end;
  margin-bottom: -1rem;
  /* hide the base */
  place-self: center;
}

header .primary-backer {
  grid-row: 1;
  grid-column: 1;
  z-index: -1;
  mix-blend-mode: multiply;
  /* backdrop-filter: blur(5px); */
  /* oddly above 30 seems to go back to less */
  /* and I cant do this with a color background */
  max-height: 15rem;
  z-index: 5;
}

header .filter-backer {
  backdrop-filter: blur(5px);
  grid-row: 1;
  grid-column: 1;
  z-index: -2;
}

header img {
  grid-row: 1/3;
  grid-column: 1;
}

.desaturate {
  grid-row: 1/3;
  grid-column: 1;
  z-index: 3;
}

/*------------------------------------*/
/* #MAIN */
/*------------------------------------*/


main {
  max-width: var(--base-measure);
  margin: 0 auto;
}

main :is(h2, h3, p) {
  margin: 1rem;
}

main svg {
  width: 100%;
  max-height: 5rem;
}

/*------------------------------------*/
  /* #INVOLVED */
/*------------------------------------*/


#involved {
  width: calc(100% - 2rem);
  max-width: var(--base-measure);
  margin: 0 auto;
}

#involved :is(h4, h5, p, img, svg) {
  width: calc(100% - 2rem);
  margin-left: 1rem;
  margin-right: 1rem;
}

#involved article {
  display: grid;
}

@media (min-width: 40rem) {
  #involved article {
    grid-template-columns: 12rem 1fr;
    grid-gap: 2rem;
  }
}

#involved .text {
  grid-row: 2;
  grid-column: 1;
}

@media (min-width: 40rem) {
  #involved .text {
    grid-row: 1;
    grid-column: 2;
  }
}


#involved svg {
  grid-row: 1;
  grid-column: 1;
  z-index: 10;
  mix-blend-mode: multiply;
  width: 100%;
}

#involved img {
  grid-row: 1;
  grid-column: 1;
  max-width: 80vw;
  mix-blend-mode: multiply;
  /* z-index: 10; */
  border-radius: 50%;
  padding: 1rem;
}

@media (min-width: 40rem) {
  #involved img {
    max-width: 8rem;
  }
}

#involved .desaturate {
  grid-row: 1;
  grid-column: 1;
  z-index: 5;
}

/*------------------------------------*/
/* #FOOTER */
/*------------------------------------*/


footer {
  display: grid;
}

footer :is(h4, a) {
  max-width: var--(base-measure);
  margin: 0 auto;
  display: block;
  /* needed for the a */
  grid-row: 2;
  grid-column: 1;
}

footer svg {
  grid-row: 1;
  grid-column: 1;
  width: 100%;
  max-height: 5rem;
}

footer .primary-backer {
  grid-row: 2;
  grid-column: 1;
}

footer a {
  color: whitesmoke;
  z-index: 10;
  margin: 2rem auto;
  font-size: 1.5rem;
  transition: 1s;
}

@media (min-width: 40rem) {
  footer a {
    font-size: 1.953rem;
  }
}

footer a:hover {
  color: darkslategray;
}


.primary-backer {
  background: var(--primary);
}

img {
  filter: saturate(0);
}